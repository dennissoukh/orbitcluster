// sass-lint:disable property-sort-order
//
/// Grid system
//
// Generate semantic grid columns with these mixins.
=make-container
  width: $container-width
  margin-right: auto
  margin-left: auto
  padding-left: $sidebar-width

=make-row()
  display: flex
  flex-wrap: wrap
  margin-right: ($grid-gutter-width / -2)
  margin-left: ($grid-gutter-width / -2)

=make-col-ready
  position: relative
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%
  min-height: 1px
  padding-right: ($grid-gutter-width / 2)
  padding-left: ($grid-gutter-width / 2)

=make-col($size, $columns: $grid-columns)
  flex: 0 0 percentage($size / $columns)
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns)

=make-col-offset($size, $columns: $grid-columns)
  $num: $size / $columns
  margin-left: if($num == 0, 0, percentage($num))

=make-full-container
  position: relative
  left: 0
  width: 100vw
  transform: translateX(-3.3333333333vw)
  margin-top: 4.5rem
  margin-bottom: 4.5rem

  +media-respond-to(xl)
    left: 50%
    transform: translateX(-50vw)

=make-wide-container
  position: relative
  max-width: 1470px
  width: $wide-container-width
  left: 0
  margin-top: 2.5rem
  margin-bottom: 2.5rem

  +media-respond-to(xl)
    margin-left: calc(50% - 46.6666666667vw)
    transform: translateX(calc(46.6666666667vw - 50%))
